/*
*  Copyright (c) 2019. All right reserved
* Created on 2024-04-22 ( Date ISO 2024-04-22 - Time 21:42:03 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/
package com.hoa.service;


import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import com.hoa.repositories.PlandetailRepository;
import com.hoa.dto.PlanDetailDTO;
import com.hoa.entities.PlanDetail;
import com.hoa.service.PlandetailService;
import com.hoa.utils.EntityDTOMapper;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.domain.Specification;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

/**
 * Service Implementation for managing {@link PlanDetail}.
 * @author aek
 */
@Service
@Transactional
public class PlandetailServiceImpl implements PlandetailService {


    private final PlandetailRepository repository;
    private final EntityDTOMapper entityDtoMapper;

    public PlandetailServiceImpl(PlandetailRepository repo, EntityDTOMapper entityDtoMapper) {
         this.repository = repo;
         this.entityDtoMapper = entityDtoMapper;
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public PlanDetail create(PlanDetail d) {
        try {
            return repository.save(d);

        } catch (Exception ex) {
            return null;
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlanDetail update(PlanDetail d) {
        try {
            return repository.saveAndFlush(d);

        } catch (Exception ex) {
            return null;
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlanDetail getOne(Integer id) {
        try {
            return repository.findById(id).orElse(null);

        } catch (Exception ex) {
            return null;
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<PlanDetailDTO> getAll() {
        try {
            return repository.findAll().stream()
                    .map(entityDtoMapper::toDTO)
                    .collect(Collectors.toList());

        } catch (Exception ex) {
            return Collections.emptyList();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public long getTotal() {
        try {
            return repository.count();
        } catch (Exception ex) {
            return 0;
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void delete(Integer id) {
        repository.deleteById(id);
    }

    /**
     * {@inheritDoc}
     */
   	@Override
	public Page<PlanDetail> findAllPaginate(Pageable pageable) {

		return repository.findAll(pageable);
	}

    /**
     * {@inheritDoc}
     */
    @Override
	public Page<PlanDetail> findAllSpecification(Specification<PlanDetail> specs, Pageable pageable) {
		return repository.findAll(specs, pageable);
	}

    @Override
    public List<PlanDetailDTO> findPlanDetailsByPlanId(Integer planId) {
    	List<PlanDetail> planDetails = repository.findPlanDetailsByPlanId(planId);
    	
    	return planDetails.stream()
                .map(entityDtoMapper::toDTO)
                .collect(Collectors.toList());
    }
    
}
