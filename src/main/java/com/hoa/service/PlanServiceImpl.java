/*
*  Copyright (c) 2019. All right reserved
* Created on 2024-04-22 ( Date ISO 2024-04-22 - Time 21:42:03 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/
package com.hoa.service;


import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import com.hoa.repositories.PlanRepository;
import com.hoa.entities.Plan;
import com.hoa.service.PlanService;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.domain.Specification;


import java.util.Collections;
import java.util.List;

/**
 * Service Implementation for managing {@link Plan}.
 * @author aek
 */
@Service
@Transactional
public class PlanServiceImpl implements PlanService {


    private final PlanRepository repository;

    public PlanServiceImpl(PlanRepository repo) {
         this.repository = repo;
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Plan create(Plan d) {
        try {
            return repository.save(d);

        } catch (Exception ex) {
            return null;
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Plan update(Integer id,Plan d) {
        try { 
   		 if(repository.existsById(id)) {
			 d.setPlanId(id);
         return repository.saveAndFlush(d);
		 }
		 else {
			 return null;
		 }


        } catch (Exception ex) {
            return null;
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Plan getOne(Integer id) {
        try {
            return repository.findById(id).orElse(null);

        } catch (Exception ex) {
            return null;
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Plan> getAll() {
        try {
            return repository.findAll();

        } catch (Exception ex) {
            return Collections.emptyList();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public long getTotal() {
        try {
            return repository.count();
        } catch (Exception ex) {
            return 0;
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void delete(Integer id) {
        repository.deleteById(id);
    }

    /**
     * {@inheritDoc}
     */
   	@Override
	public Page<Plan> findAllPaginate(Pageable pageable) {

		return repository.findAll(pageable);
	}

    /**
     * {@inheritDoc}
     */
    @Override
	public Page<Plan> findAllSpecification(Specification<Plan> specs, Pageable pageable) {
		return repository.findAll(specs, pageable);
	}
    
    @Override
    public Plan findPlanByTypeRangePeriod(Integer planTypeId, Integer planRangeId, Integer planPeriodId) {
        return repository.findByPlanTypeIdAndPlanRangeIdAndPlanPeriodId(planTypeId, planRangeId, planPeriodId);
    }
    
    @Override
    public List<Plan> findPlansByRangePeriod(Integer planRangeId, Integer planPeriodId) {
        return repository.findByPlanRangeIdAndPlanPeriodId(planRangeId, planPeriodId);
    }


}
