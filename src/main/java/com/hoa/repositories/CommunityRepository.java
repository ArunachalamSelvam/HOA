/*
 * Java domain class for entity "Community" 
 * Created on 2024-04-22 ( Date ISO 2024-04-22 - Time 21:42:02 )
 * Generated by Telosys Tools Generator ( version 3.3.0 )
 */
package com.hoa.repositories;
import com.hoa.entities.Community;
import com.hoa.responseEntities.CommunityListResponse;

import java.util.List;
import java.util.Map;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

/**
 * <h2>CommunityRepository</h2>
 *
 * createdAt : 2024-04-22 - Time 21:42:02
 * <p>
 * Description: Spring Data repository for the {@link Community} entity.
 * 
 * @author aek
 */
@Repository
public interface CommunityRepository  extends JpaRepository<Community, Integer> , JpaSpecificationExecutor<Community> {
	Community findByCommunityId(Integer communityId);
	Community findByCommunityCode(String communitycode);
	
	@Query("SELECT c.communityId FROM Community c WHERE c.contractId = :contractId")
	Integer findCommunityIdByContractId(@Param("contractId") Integer contractId);
	
	@Query("SELECT COUNT(c) FROM Community c WHERE c.communityCode = :communityCode")
	int countByCommunityCode(@Param("communityCode") String communityCode);
	
	boolean existsByCommunityCode(String communityCode);
	
	@Transactional
    @Modifying
    @Query("UPDATE Community c SET c.activeStatus = :activeStatus WHERE c.communityId = :communityId")
    int updateActiveStatus(Integer communityId, Boolean activeStatus);
	
	 @Query(value = "SELECT \n"
	            + " c.communityid AS communityId,\n"
	            + " c.contract_id AS contractId,\n"
	            + " c.community_code AS communityCode,\n"
	            + " co.contract_code AS contractCode,\n"
	            + " c.name AS communityName,\n"
	            + " c.community_size AS communitySize,\n"
	            + " c.active_status AS activeStatus\n"
	            + "FROM\n"
	            + " community c\n"
	            + "JOIN\n"
	            + " contract co ON c.contract_id = co.contract_id", nativeQuery = true)
	    List<Map<String, Object>> getAll();

	
	
}
