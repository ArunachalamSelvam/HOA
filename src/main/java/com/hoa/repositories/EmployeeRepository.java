/*
 * Java domain class for entity "Employee" 
 * Created on 2024-04-22 ( Date ISO 2024-04-22 - Time 21:42:03 )
 * Generated by Telosys Tools Generator ( version 3.3.0 )
 */
package com.hoa.repositories;

import com.hoa.entities.Employee;
import com.hoa.responseEntities.EmployeeResponseWithIdAndName;

import java.util.List;
import java.util.Map;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

/**
 * <h2>EmployeeRepository</h2>
 *
 * createdAt : 2024-04-22 - Time 21:42:03
 * <p>
 * Description: Spring Data repository for the {@link Employee} entity.
 * 
 * @author aek
 */
@Repository
public interface EmployeeRepository extends JpaRepository<Employee, Integer>, JpaSpecificationExecutor<Employee> {

	Employee findEmployeeByUserId(Integer userId);

	@Query("Select COUNT(e) from Employee e where e.employeeNo= :employeeNo")
	int countByEmployeeNo(String employeeNo);

	@Query(value = "SELECT \n" + 
	"	e.employee_id AS employeeId,\n" + 
	"	u.first_name AS firstName\n" + 
	"FROM \n"
			+ "	employee e\n" + 
	"JOIN\n" +
			"	\"user\" u ON e.user_id = u.user_id\n" +
	"WHERE\n"
			+ "	e.designation_id = :designationId", nativeQuery = true)
	List<Map<String, Object>> getEmployeeResponseWithIdAndName(@Param("designationId") Integer designationId);

	@Query(value = "SELECT \n" + 
	"    e.employee_id AS employeeId, \n" + 
			"    u.first_name AS firstName \n" + 
	"FROM \n"
			+ "    employee e \n" +
	"JOIN \n" + "    \"user\" u ON e.user_id = u.user_id \n" +
	"WHERE \n"
			+ "    e.manager_id = :managerId", nativeQuery = true)
	List<Map<String, Object>> getEmployeeResponseWithIdAndNameByManagerId(@Param("managerId") Integer managerId);
	
	@Query(value = "SELECT e.employee_id AS employeeId,\n"
	        + "       e.employee_no AS employeeNo,\n"
	        + "       e.manager_id AS managerId,\n"
	        + "       u.user_id AS userId,\n"
	        + "       u.first_name AS firstName,\n"
	        + "       u.email_id AS emailId,\n"
	        + "       u.mobile_number AS mobileNumber,\n"
	        + "       u.active_status AS activeStatus,\n"
	        + "       d.name\n"
	        + "FROM employee e\n"
	        + "JOIN\n"
	        + "     \"user\" u ON u.user_id = e.user_id\n"
	        + "JOIN\n"
	        + "     designation d ON d.designation_id = e.designation_id", nativeQuery = true)
	List<Map<String, Object>> findEmployeesByemployeeId();

	@Query(value = "SELECT e.employee_id AS employeeId,\n"
	        + "       e.employee_no AS employeeNo,\n"
	        + "       e.manager_id AS managerId,\n"
	        + "       u.user_id AS userId,\n"
	        + "       u.first_name AS firstName,\n"
	        + "       u.email_id AS emailId,\n"
	        + "       u.mobile_number AS mobileNumber,\n"
	        + "       u.active_status AS activeStatus,\n"
	        + "       d.name\n"
	        + "FROM employee e\n"
	        + "JOIN\n"
	        + "     \"user\" u ON u.user_id = e.user_id\n"
	        + "JOIN\n"
	        + "     designation d ON d.designation_id = e.designation_id\n"
	        + "WHERE e.manager_id = :managerId", nativeQuery = true)
	List<Map<String, Object>> findEmployeesBymanagerId(@Param("managerId") Integer managerId);

}
